# Copyright 2012 NAKAMURA Yoshitaka
# Copyright 2013 Nicolas Braud-Santoni <nicolas+exherbo@braud-santoni.eu>
# Distributed under the terms of the GNU General Public License v2

require autotools [ supported_autoconf=[ 2.5 ] supported_automake=[ 1.12 ] ]
require systemd-service

if ever is_scm; then
    SCM_zfsimages_REPOSITORY="https://github.com/zfsonlinux/zfs-images.git"
    SCM_SECONDARY_REPOSITORIES="zfsimages"
    SCM_EXTERNAL_REFS="scripts/zfs-images:zfsimages"
fi

require github [ user=zfsonlinux tag=${PNV} ]

HOMEPAGE="http://zfsonlinux.org/"
SUMMARY="Native ZFS for Linux"
DESCRIPTION="
The ZFS on Linux project provides a feature-complete implementation of the ZFS file system (as defined by the OpenZFS project).

ZFS is a combined file system and logical volume manager.
The features of ZFS include protection against data corruption, support for high
storage capacities, efficient data compression, integration of the concepts of
filesystem and volume management, snapshots and copy-on-write clones, continuous
integrity checking and automatic repair, RAID-Z and native NFSv4 ACLs.
"

LICENCES="CDDL-1.0"
MYOPTIONS=""

DEPENDENCIES="
    build+run:
        sys-libs/spl
"

DEFAULT_SRC_CONFIGURE_PARAMS=(
    --enable-systemd
    --with-config=user
    --with-dracutdir=/usr/$(exhost --target)/lib/dracut
    --with-modulesloaddir=/usr/$(exhost --target)/lib/modules-load.d
    --with-udevdir=/usr/$(exhost --target)/lib/udev
    --with-systemdunitdir="${SYSTEMDSYSTEMUNITDIR}"
    --with-systemdpresetdir="${SYSTEMDSYSTEMUNITDIR}-preset"
)

# XXX: need root privileges. also, kernel modules should be build to run test
RESTRICT="test"

export_exlib_phases src_prepare src_install pkg_postinst

zfs_src_prepare() {
    AT_M4DIR=( config )
    edo sed -i "s,modulesloaddir=/usr/lib/modules-load.d,modulesloaddir=/usr/$(exhost --target)/lib/modules-load.d," config/user-systemd.m4
    edo sed -i -e "s/cpp/$(exhost --target)-cpp/" config/kernel.m4

    eautoreconf
}

zfs_src_install() {
    default

    if ever is_scm; then
        edo mv "${IMAGE}"/sbin/mount.zfs "${IMAGE}"/usr/$(exhost --target)/bin
        edo rmdir "${IMAGE}"/sbin
    fi

    edo rmdir "${IMAGE}"/usr/$(exhost --target)/include/libzfs/linux

    insinto /usr/src/${PNV}
    doins -r META config include module
    exeinto /usr/src/${PNV}
    doexe configure

    find ./ -name "*.in" | while read n; do
        insinto /usr/src/${PNV}/"$(dirname "${n}")"
        doins "${n}"
    done
}

zfs_pkg_postinst() {
    elog "The kernel module source is installed into /usr/src/${PNV}"
    elog "You have to build it yourself:"
    elog "# cd /usr/src/${PNV}"
    elog "# ./configure --with-config=kernel"
    elog "# make && make install"
}

