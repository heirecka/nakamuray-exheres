# Copyright 2012 NAKAMURA Yoshitaka
# Distributed under the terms of the GNU General Public License v2

require elisp-optional [ source_directory=unix/emacs ] python [ has_bin=false has_lib=false ]

PROTOBUF_PV=2.4.1

SUMMARY="Japanese Input Method"
HOMEPAGE="http://code.google.com/p/mozc/"
DOWNLOADS="
    http://mozc.googlecode.com/files/${PNV}.tar.bz2
    http://protobuf.googlecode.com/files/protobuf-${PROTOBUF_PV}.tar.gz
"

LICENCES="BSD-2"
SLOT="0"
PLATFORMS="~amd64"
MYOPTIONS="
    ibus [[ description = [ build IBus engine module ] ]]
"

DEPENDENCIES="
    build:
        dev-lang/python:*[>=2&<3]
        dev-util/pkg-config
    build+run:
        dev-libs/glib:2
        dev-libs/openssl
        dev-libs/zinnia
        x11-libs/libxcb
        x11-libs/qt:4
        ibus? (
            inputmethods/ibus[>=1.4.1]
            x11-libs/gtk+:2
        )
"


src_prepare() {
    default

    edo ln -s "${WORKBASE}"/protobuf-${PROTOBUF_PV} "${WORK}"/protobuf/files
}

src_configure() {
    # to avoid link failure, unset $LD
    edo env -u LD ${PYTHON} build_mozc.py gyp --server_dir=/usr/${LIBDIR}/mozc
}

src_compile() {
    local myargs=(
        server/server.gyp:mozc_server
        gui/gui.gyp:mozc_tool
    )

    if option emacs; then
        myargs+=(
            unix/emacs/emacs.gyp:mozc_emacs_helper
        )
    fi

    if option ibus; then
        myargs+=(
            unix/ibus/ibus.gyp:ibus_mozc
            renderer/renderer.gyp:mozc_renderer
        )
    fi

    edo ${PYTHON} build_mozc.py build_tools -j ${EXJOBS} -c Release
    edo ${PYTHON} build_mozc.py build -j ${EXJOBS} -c Release "${myargs[@]}"

    elisp-optional_src_compile
}

src_install() {
    exeinto /usr/${LIBDIR}/mozc
    doexe out_linux/Release/mozc_server
    doexe out_linux/Release/mozc_tool

    elisp-optional_src_install

    if option emacs; then
        dobin out_linux/Release/mozc_emacs_helper
    fi

    if option ibus; then
        exeinto /usr/${LIBDIR}/mozc
        doexe out_linux/Release/mozc_renderer

        exeinto /usr/libexec
        newexe out_linux/Release/ibus_mozc ibus-engine-mozc

        insinto /usr/share/ibus/component
        doins out_linux/Release/obj/gen/unix/ibus/mozc.xml

        insinto /usr/share/ibus-mozc
        pushd data/images/unix
        newins ime_product_icon_opensource-32.png product_icon.png
        for f in ui-*; do
            newins "${f}" "${f/ui-}"
        done
        popd
    fi
}

