Source: upstream
Upstream: yes, http://code.google.com/p/mozc/issues/detail?id=161
Reason: IBus 1.5 support in ibus-mozc

Index: unix/ibus/gen_mozc_xml.py
===================================================================
--- unix/ibus/gen_mozc_xml.py	(revision 130)
+++ unix/ibus/gen_mozc_xml.py	(working copy)
@@ -39,6 +39,7 @@
 
 import optparse
 import os
+import subprocess
 import sys
 
 # Information to generate <component> part of mozc.xml. %s will be replaced with
@@ -76,6 +77,15 @@
         'longname': ['%s'],
         'layout': ['jp'],
     },
+    # On Linux (IBus >= 1.5), we use special label 'default' for the keyboard
+    # layout.
+    'Linux-IBus1.5': {
+        # DO NOT change the engine name 'mozc-jp'. The names is referenced by
+        # unix/ibus/mozc_engine.cc.
+        'name': ['mozc-jp'],
+        'longname': ['%s'],
+        'layout': ['default'],
+    },
     # On Chrome/Chromium OS, we provide three engines.
     'ChromeOS': {
         # DO NOT change the engine name 'mozc-jp'. The names is referenced by
@@ -173,6 +183,17 @@
   print CPP_FOOTER % guard_name
 
 
+def IsIBus15OrGreater(options):
+  """Returns True when the version of ibus-1.0 is 1.5 or greater."""
+  command_line = [options.pkg_config_command, '--exists',
+                  'ibus-1.0 >= 1.5.0']
+  return_code = subprocess.call(command_line)
+  if return_code == 0:
+    return True
+  else:
+    return False
+
+
 def main():
   """The main function."""
   parser = optparse.OptionParser(usage='Usage: %prog [options]')
@@ -189,21 +210,28 @@
   parser.add_option('--server_dir', dest='server_dir', default='',
                     help='The absolute directory path to be installed the '
                     'server executable.')
+  parser.add_option('--pkg_config_command', dest='pkg_config_command',
+                    default='pkg-config',
+                    help='The path to pkg-config command.')
   (options, unused_args) = parser.parse_args()
 
   setup_arg = []
-  if options.platform == 'Linux':
+  platform = options.platform
+  if platform == 'Linux':
     setup_arg.append(os.path.join(options.server_dir, 'mozc_tool'))
     setup_arg.append('--mode=config_dialog')
+    if IsIBus15OrGreater(options):
+      # A tentative workaround against IBus 1.5
+      platform = 'Linux-IBus1.5'
 
   if options.output_cpp:
     OutputCpp(PRODUCT_NAMES[options.branding], IBUS_COMPONENT_PROPS,
               IBUS_ENGINE_COMMON_PROPS,
-              IBUS_ENGINES_PROPS[options.platform])
+              IBUS_ENGINES_PROPS[platform])
   else:
     OutputXml(PRODUCT_NAMES[options.branding], IBUS_COMPONENT_PROPS,
               IBUS_ENGINE_COMMON_PROPS,
-              IBUS_ENGINES_PROPS[options.platform],
+              IBUS_ENGINES_PROPS[platform],
               setup_arg)
   return 0
 
Index: unix/ibus/ibus.gyp
===================================================================
--- unix/ibus/ibus.gyp	(revision 130)
+++ unix/ibus/ibus.gyp	(working copy)
@@ -113,6 +113,7 @@
                 './gen_mozc_xml.py',
                 '--platform=ChromeOS',
                 '--branding=GoogleJapaneseInput',
+                '--pkg_config_command=<(pkg_config_command)',
               ],
             }],
             ['target_platform=="ChromeOS" and branding!="GoogleJapaneseInput"', {
@@ -122,6 +123,7 @@
                 './gen_mozc_xml.py',
                 '--platform=ChromeOS',
                 '--branding=Mozc',
+                '--pkg_config_command=<(pkg_config_command)',
               ],
             }],
             ['target_platform!="ChromeOS"', {
@@ -132,6 +134,7 @@
                 '--platform=Linux',
                 '--branding=Mozc',
                 '--server_dir=<(server_dir)',
+                '--pkg_config_command=<(pkg_config_command)',
               ],
             }],
           ],
